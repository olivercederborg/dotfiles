[
    {
        "key": "n",
        "command": "editor.action.scrollDownHover",
        "when": "editorHoverFocused"
    },
    {
        "key": "j",
        "command": "-editor.action.scrollDownHover",
        "when": "editorHoverFocused"
    },
    {
        "key": "e",
        "command": "editor.action.scrollUpHover",
        "when": "editorHoverFocused"
    },
    {
        "key": "k",
        "command": "-editor.action.scrollUpHover",
        "when": "editorHoverFocused"
    },
    {
        "key": "n",
        "command": "list.focusDown",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputFocused"
    },
    {
        "key": "j",
        "command": "-list.focusDown",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputFocused"
    },
    {
        "key": "n",
        "command": "list.focusDown",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "j",
        "command": "-list.focusDown",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "e",
        "command": "list.focusUp",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputFocused"
    },
    {
        "key": "k",
        "command": "-list.focusUp",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputFocused"
    },
    {
        "key": "e",
        "command": "list.focusUp",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "k",
        "command": "-list.focusUp",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "ctrl+w -",
        "command": "-workbench.action.decreaseViewHeight",
        "when": "!editorTextFocus && !isAuxiliaryWindowFocusedContext && !terminalFocus && neovim.mode != 'cmdline'"
    },
    {
        "key": "ctrl+`",
        "command": "-workbench.action.terminal.toggleTerminal",
        "when": "terminal.active"
    },
    {
        "key": "cmd+t",
        "command": "workbench.action.terminal.toggleTerminal"
    },
    {
        "key": "ctrl+e",
        "command": "list.focusUp",
        "when": "listFocus && !inputFocus && !treestickyScrollFocused"
    },
    {
        "key": "ctrl+e",
        "command": "list.focusUp",
        "when": "inReferenceSearchEditor && neovim.mode == 'normal'"
    },
    {
        "key": "ctrl+e",
        "command": "list.focusUp",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "ctrl+e",
        "command": "-vscode-neovim.ctrl-e",
        "when": "editorTextFocus && neovim.ctrlKeysNormal.e && neovim.init && neovim.mode != 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
    },
    {
        "key": "ctrl+e",
        "command": "-vscode-neovim.send",
        "when": "editorTextFocus && neovim.ctrlKeysInsert.e && neovim.init && neovim.mode == 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
    },
    {
        "key": "ctrl+e",
        "command": "list.focusAnyUp",
        "when": "listFocus && !inputFocus && !treestickyScrollFocused"
    },
    {
        "key": "ctrl+e",
        "command": "quickInput.previous",
        "when": "inQuickInput && quickInputType == 'quickPick'"
    },
    {
        "key": "ctrl+e",
        "command": "selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },
    {
        "key": "ctrl+e",
        "command": "selectPrevCodeAction",
        "when": "codeActionMenuVisible"
    },
    // Navigation between window areas
    {
        "key": "ctrl+k",
        "command": "workbench.panel.composerViewPane2.view.focus",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+i",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "view == 'workbench.panel.composerViewPane2.view'"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "explorerViewletFocus"
    },
    {
        "key": "ctrl+i",
        "command": "workbench.view.explorer",
        "when": "editorFocus"
    },
    // {
    //     "key": "ctrl+n",
    //     "command": "workbench.action.terminal.focus",
    //     "when": "editorFocus && !(suggestWidgetVisible || suggestWidgetHasFocusedSuggestion)"
    // },
    // {
    //     "key": "ctrl+e",
    //     "command": "workbench.action.focusActiveEditorGroup",
    //     "when": "terminalFocus"
    // },
    {
        "key": "ctrl+i",
        "command": "workbench.action.navigateRight",
        "when": "!suggestWidgetVisible && !quickInputVisible && !inReferenceSearchEditor && !listFocus && !inputFocus"
    },
    // {
    //     "key": "ctrl+e",
    //     "command": "workbench.action.navigateUp",
    //     "when": "!suggestWidgetVisible && !quickInputVisible && !inReferenceSearchEditor && !inputFocus"
    // },
    // {
    //     "key": "ctrl+n",
    //     "command": "workbench.action.navigateDown",
    //     "when": "!suggestWidgetVisible && !quickInputVisible && !inReferenceSearchEditor && !inputFocus && list"
    // },
    {
        "key": "ctrl+w ctrl+e",
        "command": "workbench.action.navigateUp",
    },
    {
        "key": "ctrl+w ctrl+n",
        "command": "workbench.action.navigateDown",
    },
    {
        "key": "ctrl+w ctrl+k",
        "command": "workbench.action.navigateLeft",
    },
    {
        "key": "ctrl+w ctrl+i",
        "command": "workbench.action.navigateRight",
    },
    {
        "key": "ctrl+a",
        "command": "editor.action.marker.next",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+q",
        "command": "editor.action.marker.prev",
        "when": "editorFocus"
    },
    {
        "key": "cmd+t",
        "command": "-workbench.action.showAllSymbols"
    },
    {
        "key": "space r",
        "command": "editor.action.rename",
        "when": "editorTextFocus && neovim.mode != 'insert'"
    },
    {
        "key": "space e",
        "command": "workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup",
        "when": "editorTextFocus && neovim.mode != 'insert'"
    },
    {
        "key": "space z",
        "command": "workbench.action.toggleCenteredLayout",
        "when": "editorTextFocus && neovim.mode != 'insert'"
    },
    // Sidebar
    {
        "key": "shift+cmd+e",
        "command": "workbench.view.explorer",
        "when": "!filesExplorerFocus && viewContainer.workbench.view.explorer.enabled"
    },
    {
        "key": "shift+cmd+e",
        "command": "workbench.action.closeSidebar",
        "when": "filesExplorerFocus && viewContainer.workbench.view.explorer.enabled"
    },
    {
        "key": "escape",
        "command": "workbench.action.closeSidebar",
        "when": "filesExplorerFocus && viewContainer.workbench.view.explorer.enabled"
    },
    {
        "key": "ctrl+m",
        "command": "workbench.action.navigateForward",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+o",
        "command": "workbench.action.navigateBack",
        "when": "editorTextFocus"
    },
    {
        "key": "shift-cmd-d",
        "command": "editor.action.addSelectionToNextFindMatch",
        "when": "(neovim.mode == 'normal' || neovim.mode == 'visual') && (editorTextFocus || !inputFocus)"
    },
    {
        "key": "ctrl+u",
        "command": "-vscode-neovim.ctrl-u",
        "when": "editorTextFocus && neovim.ctrlKeysNormal.u && neovim.init && neovim.mode != 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
    },
    {
        "key": "ctrl+d",
        "command": "-vscode-neovim.ctrl-d",
        "when": "editorTextFocus && neovim.ctrlKeysNormal.d && neovim.init && neovim.mode != 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
    },
    {
        "key": "ctrl+d",
        "command": "vscode-neovim.ctrl-d"
    },
    {
        "key": "ctrl+u",
        "command": "vscode-neovim.ctrl-u"
    },
    {
        "key": "u",
        "command": "undo",
        "when": "neovim.mode == normal && editorTextFocus"
    },
    {
        "key": "shift+u",
        "command": "redo",
        "when": "neovim.mode == normal && editorTextFocus"
    },
    {
        "key": "cmd+d",
        "command": "vscode-neovim.lua",
        "args": [
            "local vscode = require('vscode')",
            "vscode.with_insert(function()",
            "  vscode.action('editor.action.addSelectionToNextFindMatch')",
            "end)"
        ]
    },
]
